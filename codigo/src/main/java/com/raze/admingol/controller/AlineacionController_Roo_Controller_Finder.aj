// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.raze.admingol.controller;

import com.raze.admingol.controller.AlineacionController;
import com.raze.admingol.domain.Alineacion;
import com.raze.admingol.domain.Jugador;
import com.raze.admingol.domain.Partido;
import java.util.Date;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect AlineacionController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByJugador", "form" }, method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByJugadorForm(Model uiModel) {
        uiModel.addAttribute("jugadors", Jugador.findAllJugadors());
        return "alineacions/findAlineacionsByJugador";
    }
    
    @RequestMapping(params = "find=ByJugador", method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByJugador(@RequestParam("jugador") Jugador jugador, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByJugador(jugador, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Alineacion.countFindAlineacionsByJugador(jugador) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByJugador(jugador, sortFieldName, sortOrder).getResultList());
        }
        addDateTimeFormatPatterns(uiModel);
        return "alineacions/list";
    }
    
    @RequestMapping(params = { "find=ByJugadorAndFechaCreacionBetween", "form" }, method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByJugadorAndFechaCreacionBetweenForm(Model uiModel) {
        uiModel.addAttribute("jugadors", Jugador.findAllJugadors());
        addDateTimeFormatPatterns(uiModel);
        return "alineacions/findAlineacionsByJugadorAndFechaCreacionBetween";
    }
    
    @RequestMapping(params = "find=ByJugadorAndFechaCreacionBetween", method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByJugadorAndFechaCreacionBetween(@RequestParam("jugador") Jugador jugador, @RequestParam("minFechaCreacion") @DateTimeFormat(style = "M-") Date minFechaCreacion, @RequestParam("maxFechaCreacion") @DateTimeFormat(style = "M-") Date maxFechaCreacion, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByJugadorAndFechaCreacionBetween(jugador, minFechaCreacion, maxFechaCreacion, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Alineacion.countFindAlineacionsByJugadorAndFechaCreacionBetween(jugador, minFechaCreacion, maxFechaCreacion) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByJugadorAndFechaCreacionBetween(jugador, minFechaCreacion, maxFechaCreacion, sortFieldName, sortOrder).getResultList());
        }
        addDateTimeFormatPatterns(uiModel);
        return "alineacions/list";
    }
    
    @RequestMapping(params = { "find=ByPartido", "form" }, method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByPartidoForm(Model uiModel) {
        uiModel.addAttribute("partidoes", Partido.findAllPartidoes());
        return "alineacions/findAlineacionsByPartido";
    }
    
    @RequestMapping(params = "find=ByPartido", method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByPartido(@RequestParam("partido") Partido partido, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByPartido(partido, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Alineacion.countFindAlineacionsByPartido(partido) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByPartido(partido, sortFieldName, sortOrder).getResultList());
        }
        addDateTimeFormatPatterns(uiModel);
        return "alineacions/list";
    }
    
    @RequestMapping(params = { "find=ByPartidoAndFechaCreacionBetween", "form" }, method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByPartidoAndFechaCreacionBetweenForm(Model uiModel) {
        uiModel.addAttribute("partidoes", Partido.findAllPartidoes());
        addDateTimeFormatPatterns(uiModel);
        return "alineacions/findAlineacionsByPartidoAndFechaCreacionBetween";
    }
    
    @RequestMapping(params = "find=ByPartidoAndFechaCreacionBetween", method = RequestMethod.GET)
    public String AlineacionController.findAlineacionsByPartidoAndFechaCreacionBetween(@RequestParam("partido") Partido partido, @RequestParam("minFechaCreacion") @DateTimeFormat(style = "M-") Date minFechaCreacion, @RequestParam("maxFechaCreacion") @DateTimeFormat(style = "M-") Date maxFechaCreacion, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByPartidoAndFechaCreacionBetween(partido, minFechaCreacion, maxFechaCreacion, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Alineacion.countFindAlineacionsByPartidoAndFechaCreacionBetween(partido, minFechaCreacion, maxFechaCreacion) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("alineacions", Alineacion.findAlineacionsByPartidoAndFechaCreacionBetween(partido, minFechaCreacion, maxFechaCreacion, sortFieldName, sortOrder).getResultList());
        }
        addDateTimeFormatPatterns(uiModel);
        return "alineacions/list";
    }
    
}
