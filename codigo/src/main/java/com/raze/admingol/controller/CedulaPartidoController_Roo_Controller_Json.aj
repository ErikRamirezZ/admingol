// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.raze.admingol.controller;

import com.raze.admingol.catalog.StatusCedula;
import com.raze.admingol.controller.CedulaPartidoController;
import com.raze.admingol.domain.CedulaPartido;
import com.raze.admingol.domain.Partido;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

privileged aspect CedulaPartidoController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{id}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> CedulaPartidoController.showJson(@PathVariable("id") Long id) {
        CedulaPartido cedulaPartido = CedulaPartido.findCedulaPartido(id);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (cedulaPartido == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(cedulaPartido.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> CedulaPartidoController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<CedulaPartido> result = CedulaPartido.findAllCedulaPartidoes();
        return new ResponseEntity<String>(CedulaPartido.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> CedulaPartidoController.createFromJson(@RequestBody String json, UriComponentsBuilder uriBuilder) {
        CedulaPartido cedulaPartido = CedulaPartido.fromJsonToCedulaPartido(json);
        cedulaPartido.persist();
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        RequestMapping a = (RequestMapping) getClass().getAnnotation(RequestMapping.class);
        headers.add("Location",uriBuilder.path(a.value()[0]+"/"+cedulaPartido.getId().toString()).build().toUriString());
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> CedulaPartidoController.createFromJsonArray(@RequestBody String json) {
        for (CedulaPartido cedulaPartido: CedulaPartido.fromJsonArrayToCedulaPartidoes(json)) {
            cedulaPartido.persist();
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> CedulaPartidoController.updateFromJson(@RequestBody String json, @PathVariable("id") Long id) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        CedulaPartido cedulaPartido = CedulaPartido.fromJsonToCedulaPartido(json);
        cedulaPartido.setId(id);
        if (cedulaPartido.merge() == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> CedulaPartidoController.deleteFromJson(@PathVariable("id") Long id) {
        CedulaPartido cedulaPartido = CedulaPartido.findCedulaPartido(id);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (cedulaPartido == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        cedulaPartido.remove();
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByPartido", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> CedulaPartidoController.jsonFindCedulaPartidoesByPartido(@RequestParam("partido") Partido partido) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(CedulaPartido.toJsonArray(CedulaPartido.findCedulaPartidoesByPartido(partido).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByPartidoAndStatus", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> CedulaPartidoController.jsonFindCedulaPartidoesByPartidoAndStatus(@RequestParam("partido") Partido partido, @RequestParam("status") StatusCedula status) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(CedulaPartido.toJsonArray(CedulaPartido.findCedulaPartidoesByPartidoAndStatus(partido, status).getResultList()), headers, HttpStatus.OK);
    }
    
}
