// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.raze.admingol.controller;

import com.raze.admingol.catalog.Accion;
import com.raze.admingol.controller.EstadisticasController;
import com.raze.admingol.domain.Alineacion;
import com.raze.admingol.domain.Estadisticas;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect EstadisticasController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByAccion", "form" }, method = RequestMethod.GET)
    public String EstadisticasController.findEstadisticasesByAccionForm(Model uiModel) {
        uiModel.addAttribute("accions", Accion.findAllAccions());
        return "estadisticases/findEstadisticasesByAccion";
    }
    
    @RequestMapping(params = "find=ByAccion", method = RequestMethod.GET)
    public String EstadisticasController.findEstadisticasesByAccion(@RequestParam("accion") Accion accion, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("estadisticases", Estadisticas.findEstadisticasesByAccion(accion, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Estadisticas.countFindEstadisticasesByAccion(accion) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("estadisticases", Estadisticas.findEstadisticasesByAccion(accion, sortFieldName, sortOrder).getResultList());
        }
        addDateTimeFormatPatterns(uiModel);
        return "estadisticases/list";
    }
    
    @RequestMapping(params = { "find=ByAlineacion", "form" }, method = RequestMethod.GET)
    public String EstadisticasController.findEstadisticasesByAlineacionForm(Model uiModel) {
        uiModel.addAttribute("alineacions", Alineacion.findAllAlineacions());
        return "estadisticases/findEstadisticasesByAlineacion";
    }
    
    @RequestMapping(params = "find=ByAlineacion", method = RequestMethod.GET)
    public String EstadisticasController.findEstadisticasesByAlineacion(@RequestParam("alineacion") Alineacion alineacion, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("estadisticases", Estadisticas.findEstadisticasesByAlineacion(alineacion, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) Estadisticas.countFindEstadisticasesByAlineacion(alineacion) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("estadisticases", Estadisticas.findEstadisticasesByAlineacion(alineacion, sortFieldName, sortOrder).getResultList());
        }
        addDateTimeFormatPatterns(uiModel);
        return "estadisticases/list";
    }
    
}
